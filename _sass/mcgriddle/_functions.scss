// ==================================================
// Functions
// ==================================================

// Gutter Width
// ==================================================
@function gutter-width($value: %) {
  @if $value == % {
    @return $grid-gutter * 100% / $grid-width;
  }
  @else {
    @return $grid-gutter;
  }
}

// Column Width
// ==================================================
@function column-width($size: 1, $value: %) {
  $column-width    : $grid-width;
  $column-width-pct: 100%;
  $grid-gutter-pct : gutter-width();

  @if type-of($size) == number and $size >= 1 {
    @if ($size < $grid-columns) {
      $grid-col    : ($grid-width - ($grid-gutter * ($grid-columns - 1))) / $grid-columns;
      $grid-col-pct: $grid-col * 100% / $grid-width;

      $column-width    : ($grid-col * $size) + ($grid-gutter * ($size - 1));
      $column-width-pct: ($grid-col-pct * $size) + ($grid-gutter-pct * ($size - 1));
    }
  }
  @else {
    @if type-of($size) == number and $size > 0 and $size < 1 {
      $column-count: 1 / $size;

      $column-width    : ($grid-width - ($grid-gutter * ($column-count - 1))) / $column-count;
      $column-width-pct: (100% - ($grid-gutter-pct * ($column-count - 1))) / $column-count;
    }
    @else if $size == minor or $size == major {
      @if $size == major {
        $column-width    : ($grid-width - $grid-gutter) * (1 - $grid-minor);
        $column-width-pct: $column-width * 100% / $grid-width;
      }
      @else {
        $column-width    : ($grid-width - $grid-gutter) * $grid-minor;
        $column-width-pct: $column-width * 100% / $grid-width;
      }
    }
  }

  @if $value == % {
    @return $column-width-pct;
  }
  @else {
    @return $column-width;
  }
}
